name:                conduit-vfs-zip
version:             0.1.0.1
github:              "RobertFischer/vfs-conduit"
license:             BSD3
author:              "Robert Fischer"
maintainer:          "smokejumperit@gmail.com"
copyright:           "(c)2019 Robert Fischer. All Rights Reserved. See LICENSE for liscensing terms."

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
synopsis:            Zip archive interface for the Conduit Virtual File System.
category:            Conduit, IO, Filesystem, Zip, Compression

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description: >2
  This package provides the ability to work with zip archives as a part of a conduit. It does this by treating the
  zip file as a virtual file system and acting on it that way. The zip archive access does not require any IO, and
  so can be used in pure conduits. If you would like to have the zip file read from disk and then persisted at the
  beginning and end of your conduit run, you can do that but it does require constructing the Zip VFS within a
  MonadResource.

  For more information, please see the README on GitHub at <https://github.com/RobertFischer/vfs-conduit#README.md>

dependencies:
- base >= 4.7 && < 5
- conduit >= 1.3.1.1 && < 1.4
- conduit-extra >= 1.3.1.1 && < 1.4
- mono-traversable >= 1.0.11.0 && < 1.1
- classy-prelude >= 1.5.0 && < 1.6
- filepath >= 1.4.2.1 && < 1.5
- bytestring >= 0.10.8.2 && < 0.11
- unliftio >= 0.2.10 && < 0.3
- unordered-containers >= 0.2.10.0 && < 0.3
- monad-loops >= 0.4.3 && < 0.5
- extra >= 1.6.16 && < 1.7
- resourcet >= 1.2.2 && < 1.3
- transformers >= 0.5.6.2 && < 0.6
- text >= 1.2.3.1 && < 1.3
- directory >= 1.3.3.0 && < 1.4
- unix >= 2.7.2.2 && < 2.8
- conduit-vfs >= 0.1.0.0 && < 0.2
- zip-archive >= 0.4.1 && < 0.5
- mtl >= 2.2.2 && < 2.3
- exceptions >= 0.10.2 && < 0.11

default-extensions:
  - AutoDeriveTypeable
  - BangPatterns
  - BinaryLiterals
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DoAndIfThenElse
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MonadFailDesugaring
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - NoImplicitPrelude
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternGuards
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - TypeFamilies
  - TypeSynonymInstances
  - ViewPatterns
  - TemplateHaskell
  - TupleSections
  - UnboxedTuples
  - QuasiQuotes
# - DeriveAnyClass
  - DeriveLift
  - ExtendedDefaultRules

ghc-options:
  - -Wall
  - -Wcompat
  - -Widentities
  - -Wincomplete-record-updates
  - -Wincomplete-uni-patterns
  - -Wpartial-fields
  - -Wredundant-constraints
  - -optP-Wno-nonportable-include-path
  - -fno-warn-type-defaults
  - -fno-warn-tabs
  - -fno-warn-unused-top-binds

library:
  source-dirs: src
  ghc-options:
      - -flate-dmd-anal
      - -fmax-simplifier-iterations=12
      - -fregs-iterative
      - -fsimplifier-phases=6
      - -flate-specialise
      - -fstatic-argument-transformation
      - -fstrictness-before=4
      - -funfolding-keeness-factor=3

tests:
  conduit-vfs-zip-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -O0
    dependencies:
    - conduit-vfs-zip
